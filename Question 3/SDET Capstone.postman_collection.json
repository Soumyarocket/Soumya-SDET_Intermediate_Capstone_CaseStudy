{
	"info": {
		"_postman_id": "4d66fc2e-0a3d-49cf-b706-3e7f355899f2",
		"name": "SDET Capstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PositiveTestCase - Valid Delay",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Status Code is 200\r",
							"pm.test(\"Status code is 200 for Postive Test Case (Valid Delay)\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Response time is less than 7000ms\r",
							"pm.test(\"Response time is less than 7000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(7000);\r",
							"});\r",
							"\r",
							"// Content-Type is JSON\r",
							"pm.test(\"Exact Content-Type header\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
							"});\r",
							"\r",
							"// Data field exists and is an array\r",
							"pm.test(\"Response has 'data' array\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"data\");\r",
							"    pm.expect(jsonData.data).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"// Each user has an id and email\r",
							"pm.test(\"Each user has id and email\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    jsonData.data.forEach(user => {\r",
							"        pm.expect(user).to.have.property(\"id\");\r",
							"        pm.expect(user).to.have.property(\"email\");\r",
							"    });\r",
							"});\r",
							"\r",
							"// Page field exists and is a number\r",
							"pm.test(\"Page field is a number\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.page).to.be.a(\"number\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users?delayId={{}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "delayId",
							"value": "{{}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NegativeTestCase - Invalid Delay",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 even for invalid delay (mock behavior)\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    const contentType = pm.response.headers.get(\"Content-Type\");\r",
							"    pm.expect(contentType).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains expected user data\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"data\");\r",
							"    pm.expect(jsonData.data).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users?delayId={{delayId}}\n",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "delayId",
							"value": "{{delayId}}\n"
						}
					]
				}
			},
			"response": []
		}
	]
}